# aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT_ID} --paths "/*"
name: build_and_deploy_frontend_main
on:
  push:
    branches: 
      - main
    paths:
      - 'webapp/*'
      - '.github/workflows/build_and_deploy_frontend_main.yml'
      - '.infrastructure/*'
env:
  REACT_APP_API_ROOT: 'https://api.paceme.info'
  REACT_APP_AWS_REGION: eu-west-2
  REACT_APP_AWS_COOKIE_STORAGE_DOMAIN: app.paceme.info
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: eu-west-2
jobs:
  build_and_deploy_app:
    name: Build and Deploy App
    runs-on: ubuntu-latest
    steps:
      # Checkout Code
      - name: checkout
        uses: actions/checkout@v2
      # Get Node
      - name: get node
        uses: actions/setup-node@v2
        with:
          node-version: "16.13.1"
      # Install webapp
      - name: install webapp
        working-directory: ./webapp
        run: npm ci
      # npm test
      - name: test webapp
        working-directory: ./webapp
        run: npm run test:ci
      # npm build
      - name: build webapp
        working-directory: ./webapp
        run: |
          export REACT_APP_AWS_USER_POOL_ID=$(aws cloudformation describe-stacks --stack-name PaceMeScaffoldStack | jq -r '.Stacks | .[] | .Outputs | .[] | select(.OutputKey=="CognitoPoolId").OutputValue')
          export REACT_APP_AWS_USER_POOL_CLIENTID=$(aws cloudformation describe-stacks --stack-name PaceMeScaffoldStack | jq -r '.Stacks | .[] | .Outputs | .[] | select(.OutputKey=="CognitoLocalWebappClientId").OutputValue')
          npm run build
      # install infrastructure
      - name: install cdk
        working-directory: ./.infrastructure
        run: npm ci
      # deploy frontend
      - name: deploy frontend
        working-directory: ./.infrastructure
        run: npm run cdk:deploy:frontend
      # clear cloudfront
      - name: clear cloudfront
        working-directory: ./.infrastructure
        run: npm run aws:invalidatecache