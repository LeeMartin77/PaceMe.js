AWSTemplateFormatVersion: 2010-09-09
Description: >-
  paceme-api

Transform: AWS::Serverless-2016-10-31


    
Globals:
  Function:
    Layers:
      - !Ref RuntimeDependenciesLayer
    Runtime: nodejs14.x
    Timeout: 180
    MemorySize: 128
    Environment:
      Variables:
        TRAINING_PLAN_TABLE: !Ref TrainingPlanTable
        TRAINING_PLAN_ACTIVITY_TABLE: !Ref TrainingPlanActivityTable
    Tags: { Key: Project, Value: PaceMeApp }

Resources:

  RuntimeDependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Metadata:
      BuildMethod: makefile
    Properties:
      Description: Runtime dependencies for Lambdas
      ContentUri: ./
      CompatibleRuntimes:
        - nodejs14.x
      RetentionPolicy: Retain

  PaceMeUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: PaceMeUserPool
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      Schema:
        - AttributeDataType: String
          Name: email
          Required: false
  
  PaceMeUserPoolWebAppClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      AllowedOAuthFlows:
        - code
      AllowedOAuthScopes:
        - phone
        - email
        - profile
        - openid
        - aws.cognito.signin.user.admin
      ExplicitAuthFlows: 
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      UserPoolId: !Ref PaceMeUserPool
      ClientName: PaceMeUserPoolWebAppClient
      GenerateSecret: false
      CallbackURLs:
        - http://localhost:3000/
        - https://app.paceme.info/

  PaceMeUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties: 
      Domain: pacemewebapp
      UserPoolId: !Ref PaceMeUserPool

  PaceMeApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'POST, GET, PUT, DELETE, OPTIONS'"
        AllowHeaders: "'Access-Control-Allow-Headers', 'Origin'"
        AllowOrigin: "'localhost:3000', 'app.paceme.info'"
        MaxAge: "'600'"
        AllowCredentials: true
      Auth:
        AddDefaultAuthorizerToCorsPreflight: false 
        DefaultAuthorizer: PaceMeCognitoAuthorizer
        Authorizers:
          PaceMeCognitoAuthorizer:
            UserPoolArn: !GetAtt PaceMeUserPool.Arn

  #TODO: Look into this, maybe not creating a million handlers...           
  #https://aws.amazon.com/blogs/aws/api-gateway-update-new-features-simplify-api-development/
  getAllTrainingPlans:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/handlers/trainingPlanHandlers.planGetAll
      Description: Get all training plans for logged in user
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TrainingPlanTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref PaceMeApi
            Path: /trainingplans
            Method: GET
    Metadata:
      BuildMethod: makefile

  createNewPlan:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/handlers/trainingPlanHandlers.planCreate
      Description: Create training plan for user
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TrainingPlanTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref PaceMeApi
            Path: /trainingplans
            Method: POST
    Metadata:
      BuildMethod: makefile

  getTrainingPlan:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/handlers/trainingPlanHandlers.planGet
      Description: Get training plan for logged in user
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TrainingPlanTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref PaceMeApi
            Path: /trainingplans/{trainingPlanId}
            Method: GET
    Metadata:
      BuildMethod: makefile

  updateTrainingPlan:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/handlers/trainingPlanHandlers.planUpdate
      Description: Update training plan for logged in user
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TrainingPlanTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref PaceMeApi
            Path: /trainingplans/{trainingPlanId}
            Method: PUT
    Metadata:
      BuildMethod: makefile

  deleteTrainingPlan:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/handlers/trainingPlanHandlers.planDelete
      Description: Delete training plan for logged in user
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TrainingPlanTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref PaceMeApi
            Path: /trainingplans/{trainingPlanId}
            Method: DELETE
    Metadata:
      BuildMethod: makefile


  getAllTrainingActivities:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/handlers/trainingPlanActivityHandlers.activityGetAll
      Description: Get all training plans for logged in user
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TrainingPlanTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TrainingPlanActivityTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref PaceMeApi
            Path: /trainingplans/{trainingPlanId}/activities
            Method: GET
    Metadata:
      BuildMethod: makefile

  createNewActivity:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/handlers/trainingPlanActivityHandlers.activityCreate
      Description: Create training plan for user
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TrainingPlanTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TrainingPlanActivityTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref PaceMeApi
            Path: /trainingplans/{trainingPlanId}/activities
            Method: POST
    Metadata:
      BuildMethod: makefile

  getTrainingPlanActivity:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/handlers/trainingPlanActivityHandlers.activityGet
      Description: Get training plan activity for logged in user
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TrainingPlanTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TrainingPlanActivityTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref PaceMeApi
            Path: /trainingplans/{trainingPlanId}/activities/{activityId}
            Method: GET
    Metadata:
      BuildMethod: makefile

  updateTrainingPlanActivity:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/handlers/trainingPlanActivityHandlers.activityUpdate
      Description: Update training plan activity for logged in user
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TrainingPlanTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TrainingPlanActivityTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref PaceMeApi
            Path: /trainingplans/{trainingPlanId}/activities/{activityId}
            Method: PUT
    Metadata:
      BuildMethod: makefile

  deleteTrainingPlanActivity:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/handlers/trainingPlanActivityHandlers.activityDelete
      Description: Delete training plan activity for logged in user
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TrainingPlanTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TrainingPlanActivityTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref PaceMeApi
            Path: /trainingplans/{trainingPlanId}/activities/{activityId}
            Method: DELETE
    Metadata:
      BuildMethod: makefile

  optionsHandler:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/handlers/optionHandler.handler
      Description: Get Options
      Events:
        TrainingPlanId:
          Type: Api
          Properties:
            RestApiId: !Ref PaceMeApi
            Path: /trainingplans/{trainingPlanId}
            Method: OPTIONS
        TrainingPlanList:
          Type: Api
          Properties:
            RestApiId: !Ref PaceMeApi
            Path: /trainingplans
            Method: OPTIONS
        TrainingPlanActivityId:
          Type: Api
          Properties:
            RestApiId: !Ref PaceMeApi
            Path: /trainingplans/{trainingPlanId}/activities/{activityId}
            Method: OPTIONS
        TrainingPlanActivityList:
          Type: Api
          Properties:
            RestApiId: !Ref PaceMeApi
            Path: /trainingplans/{trainingPlanId}/activities
            Method: OPTIONS
    Metadata:
      BuildMethod: makefile
  
  TrainingPlanTable:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
      - AttributeName: userId
        KeyType: HASH
      - AttributeName: id
        KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
  TrainingPlanActivityTable:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
      - AttributeName: trainingPlanId
        KeyType: HASH
      - AttributeName: id
        KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: trainingPlanId
          AttributeType: S

Outputs:
  FunctionApiEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${PaceMeApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  UserPoolId:
    Description: "Cognito UserPool Id"
    Value: !Ref PaceMeUserPool
  UserPoolWebClientId:
    Description: "Cognito UserPool Web Client Id"
    Value: !Ref PaceMeUserPoolWebAppClient
