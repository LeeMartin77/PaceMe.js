{{- if .Values.ingress.traefik }}
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  annotations:
    cert-manager.io/issuer: letsencrypt-prod
    acme.cert-manager.io/http01-edit-in-place: "true"
  name: traefik-paceme-api
  namespace: {{ required "metadata.namespace is required" .Release.Namespace }}
spec:
  routes:
    - match: Host(`{{ required "hostname is required" .Values.hostname }}`) && PathPrefix(`/api`)
      kind: Rule
      middlewares:
        - name: traefik-forward
        - name: api-stripprefix
      services:
        - name: paceme-api
          port: 8081
  tls:
    secretName: paceme-le-certificate
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: api-stripprefix
spec:
  stripPrefix:
    prefixes:
      - /api
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  annotations:
    cert-manager.io/issuer: letsencrypt-prod
    acme.cert-manager.io/http01-edit-in-place: "true"
  name: traefik-paceme-webapp
  namespace: {{ required "metadata.namespace is required" .Release.Namespace }}
spec:
  routes:
    - match: Host(`{{ required "hostname is required" .Values.hostname }}`)
      kind: Rule
      middlewares:
        - name: traefik-forward
      services:
        - name: paceme-webapp
          port: 9000
  tls:
    secretName: paceme-le-certificate
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  annotations:
    cert-manager.io/issuer: letsencrypt-prod
    acme.cert-manager.io/http01-edit-in-place: "true"
  name: traefik-sso-oauth2
  namespace: {{ required "metadata.namespace is required" .Release.Namespace }}
spec:
  routes:
    - match: "Host(`{{ required "hostname is required" .Values.hostname }}`) && PathPrefix(`/oauth2`)"
      kind: Rule
      services:
        - name: paceme-oauth2-proxy
          namespace: {{ required "metadata.namespace is required" .Release.Namespace }}
          port: 4180
  tls:
    secretName: paceme-le-certificate
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: traefik-forward
  namespace: {{ required "metadata.namespace is required" .Release.Namespace }}
spec:
  forwardAuth:
    address: https://{{ required "hostname is required" .Values.hostname }}/oauth2/auth #https://
    authResponseHeaders:
      - x-auth-request-user
---
# Source: oauth2-proxy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: paceme-oauth2-proxy
  name: paceme-oauth2-proxy
  namespace: {{ required "metadata.namespace is required" .Release.Namespace }}
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 4180
    protocol: TCP
    targetPort: 4180
  selector:
    k8s-app: paceme-oauth2-proxy
---
# Source: oauth2-proxy/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: paceme-oauth2-proxy
  name: paceme-oauth2-proxy
  namespace: {{ required "metadata.namespace is required" .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: paceme-oauth2-proxy
  template:
    metadata:
      labels:
        k8s-app: paceme-oauth2-proxy
    spec:
      containers:
      - args:
        - --provider=github
        - --email-domain=*
        - --upstream=file:///dev/null
        - --http-address=0.0.0.0:4180
        - --pass-user-headers=true
        - --set-authorization-header=true
        - --set-xauthrequest=true
        # Register a new application
        # https://github.com/settings/applications/new
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          value: {{ required "oauth2.clientid is required" .Values.oauth2.clientid  }}
        - name: OAUTH2_PROXY_CLIENT_SECRET
          value: {{ required "oauth2.secret is required" .Values.oauth2.secret }}
        # docker run -ti --rm python:3-alpine python -c 'import secrets,base64; print(base64.b64encode(base64.b64encode(secrets.token_bytes(16))));'
        - name: OAUTH2_PROXY_COOKIE_SECRET
          value: {{ required "oauth2.cookiesecret is required" .Values.oauth2.cookiesecret }}
        image: quay.io/oauth2-proxy/oauth2-proxy:latest
        imagePullPolicy: Always
        name: paceme-oauth2-proxy
        ports:
        - containerPort: 4180
          protocol: TCP
{{- end }}