kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: {{ .Values.metadata.namespace }}
  name: job-runner
rules:
- apiGroups:
  - extensions
  - apps
  resources:
  - deployments
  - secrets
  verbs:
  - 'patch'

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: job-runner
  namespace: {{ .Values.metadata.namespace }}
subjects:
- kind: ServiceAccount
  name: sa-job-runner
  namespace: {{ .Values.metadata.namespace }}
roleRef:
  kind: Role
  name: job-runner
  apiGroup: ""

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sa-job-runner
  namespace: {{ .Values.metadata.namespace }}

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: aws-docker-ecr-secret-updater
  namespace: {{ .Values.metadata.namespace }}
spec:
  schedule: "0 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: sa-job-runner
          containers:
          - name: aws-docker-ecr-secret-updater
            image: jshimko/kube-tools-aws
            imagePullPolicy: IfNotPresent
            env:
              - name: AWS_DEFAULT_REGION
                value: eu-west-2
              - name: AWS_ACCESS_KEY_ID
                valueFrom:
                  secretKeyRef:
                    name: paceme-api-secrets
                    key: aws-access-key-id
              - name: AWS_SECRET_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: paceme-api-secrets
                    key: aws-secret-access-key
            command:
            - /bin/sh
            - -c
            - |
              REPOSITORY={{ required "ECRApiRepository is required" .Values.ECRApiRepository }}
              REPOSITORY_ROOT="$( cut -d '/' -f 1 <<< "$REPOSITORY" )"
              DOCKER_USER=AWS
              DOCKER_PASSWORD=$(aws ecr get-login-password --region eu-west-2)
              kubectl delete secret awsregcred --namespace={{ .Values.metadata.namespace }} || true
              kubectl create secret docker-registry awsregcred \
              --docker-server=$REPOSITORY_ROOT \
              --docker-username=$DOCKER_USER \
              --docker-password=$DOCKER_PASSWORD \
              --namespace {{ .Values.metadata.namespace }}
          restartPolicy: OnFailure