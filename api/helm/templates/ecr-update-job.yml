{{ if .Values.autosecretjob }}
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
  name: ecr-cred-helper-paceme-api
  namespace: {{ .Values.metadata.namespace }}
spec:
  concurrencyPolicy: Allow
  failedJobsHistoryLimit: 1
  jobTemplate:
    metadata:
      creationTimestamp: null
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - |-
              ACCOUNT=$(aws sts get-caller-identity --query "Account" --output text)
              SECRET_NAME=awsregcred
              EMAIL=hello@leejohnmartin.co.uk
              echo "ENV variables setup done."
              kubectl delete secret --ignore-not-found $SECRET_NAME
              kubectl create secret docker-registry $SECRET_NAME \
                --docker-server=https://${ACCOUNT}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com \
                --docker-username=AWS \
                --docker-password=$(aws ecr get-login-password --region eu-west-2) \
                --namespace=paceme-api
              echo "Secret created by name. $SECRET_NAME"
              echo "All done."
            env:
            - name: AWS_DEFAULT_REGION
              value: eu-west-2
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: paceme-api-secrets
                  key: aws-access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: paceme-api-secrets
                  key: aws-secret-access-key
            image: odaniait/aws-kubectl:latest
            imagePullPolicy: IfNotPresent
            name: ecr-cred-helper
            resources: {}
            securityContext:
              capabilities: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          dnsPolicy: Default
          hostNetwork: true
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
  schedule: 0 */6 * * *
  successfulJobsHistoryLimit: 3
  suspend: false
{{ end }}